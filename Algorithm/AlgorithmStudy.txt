** Algorithm
NOTION 
-> https://www.notion.so/Algorithm-3fcaf235d1b64dd798589c9097395c73
1. 알고리즘의 정의 

    1) 정의 

    - 문제를 해결하거나 함수를 계산하기 위해 따라가야 할 모호함이 없는 간단한 명령들로 구성된 일련의 순서적 단계
    - 튜링 기계에 의해 수행 가능한 프로시저
    - 알고리즘 유형(수열, 수학, 배열, 자료구조, 응용) : 규칙을 찾아서 알고리즘을 찾아냄

    ⇒ 문제를 해결 → 읽어들임 → READ  

    ⇒ 순서도의 그림을 통해서 계산 → 출력 (고급언어, 한글, 영문 서술, 순서도의 기호를 이용해서 사용해도 됨)

    2) 알고리즘의 요건 

    - 외부에서 0개 이상의 입력을 받아들여, 하나 이상의 출력을 생성
    - 각 단계가 단순하고 모호하지 않아야 함 < 가장 큰 특징
    - 한정된 수의 작업 후에는 반드시 끝나야 함
    - 모든 명령이 수행 가능해야 함
    - 효율적이어야 함

    3) 알고리즘과 순서도 

    - 알고리즘을 표현하기 위한 방법으로 순서도(Flow Chart)를 가장 많이 사용
    - 순서도를 이용하면 알고리즘의 구조를 한눈에 파악하기 용이함

2. 순서도의 개념 
    - (1) 순서도란, 미리 정해진 기호를 이용하여 그려지는 그림으로 논리적인 절차를 표현하는 방법 중 하나
    - 순서도를 이용하면 전체적인 구조가 한눈에 들어오므로 프로그래밍을 구현하기 이전 단계인 논리적 절차를 위한 알고리즘을 표현하기 위한 방법으로 순서도(Flow Chart)를 가장 많이 사용

        ![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/cb8121f6-0ebd-4fef-9f0d-feff307184bd/_2021-01-30__1.46.17.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/cb8121f6-0ebd-4fef-9f0d-feff307184bd/_2021-01-30__1.46.17.png)

    (2) 순서도 작성법 

    1) 기본 사항 

    - 순서도는 물이 위에서 아래로 흐르듯이 윗부분에서 아래로 차례대로 그려나감.(제어흐름이 달라지는 특수한 경우 제외)
    - START 기호로부터 시작해서 END(대신 STOP)  기호로 끝남
    - 순서도는 크게 직선구조, 분기구조, 반복구조로 나뉨
    - 기호와 기호 사이에는 흐름선을 이용
    - 값을 보관하고자 할 경우 변수를 이용

    2) 순서도의 3가지 구조 

    ⇒ 직선구조 

    ![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/cc59f880-c389-4528-b5c6-d0f5bb6a6267/_2021-01-30__1.53.48.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/cc59f880-c389-4528-b5c6-d0f5bb6a6267/_2021-01-30__1.53.48.png)

    ⇒ 분기구조 

    ![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/28401800-23d3-4bff-83fd-7507600125ff/_2021-01-30__1.54.49.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/28401800-23d3-4bff-83fd-7507600125ff/_2021-01-30__1.54.49.png)

    ⇒ 반복구조 

    →  조건문과 반복문 두개 다 조건이 들어가는 것이 공통점 

    → 조건문은 조건문을 만족하면 한 번만 수행, 반복문은 계속 반복 

    ![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/749a11fb-7f3e-4e52-a63b-59829d33641d/_2021-01-30__1.56.23.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/749a11fb-7f3e-4e52-a63b-59829d33641d/_2021-01-30__1.56.23.png)

3. 순서도의 개념 
    - 프로그래밍이란, 논리의 전개. 문제를 해결하고자 하는 논리들을 질서있게 나열한 문장들이며, 처음부터 순서대로 물흐르듯이 명령들을 수행 함. 프로그램을 작성한다는 것은 이러한 순서를 나열하는 것이며, 그것은 곧 프로그램을 작성함을 의미함.

    1) 변수(variable) 

    - 절차적 프로그래밍 언어에서 프로그램의 값을 움직이는 주체적 역할을 하는 것으로, '변하는 값'을 가지게 되는 기억공간의 이름. 프로그램에서는 변수라는 이름으로 불리게 되지만 메모리에 할당된 후로는 메모리주소 몇 번지에서 몇 번지까지의 이름으로 바뀌게 될 것.

    2) 상수(constant)

    - 변수가 변하는 값을 지니고 있는 기억공간의 이름이라면 상수는 '항상 똑같은 값을 갖는 수'라는 의미로서 숫자, 문자 등을 의미

    3) 데이터타입(자료형, data type) 과 선언

    - 프로그래밍을 하기 위해서는 데이터를 컴퓨터 내부로 읽어들여 표현해야 하는데 데이터의 종류에 따라 크게 문자, 숫자 등으로 나뉘게 됨. 즉, 자료를 컴퓨터적으로 표현하는 방법에 따라서 자료들이 형(type)을 갖는다는 것

    4) 치환(assignment) 

    - 컴퓨터 프로그래밍에서는 값을 변수에 배정하는 것을 "치환(assign)한다"라고 하고 기호로는 =을 이용

        ⇒ 오른쪽은 변수, 값, 수식, 왼쪽은 반드시 기억공간 

        ![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/90e1e4c2-aeab-41fd-a24b-f5f66efb5bc2/_2021-01-30__2.15.59.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/90e1e4c2-aeab-41fd-a24b-f5f66efb5bc2/_2021-01-30__2.15.59.png)

    5) 예약어 (reserved word)와 식별자(사용자 정의어, identifier) 

    - 프로그램 내에는 반드시 그렇게 사용해야 하는 용어와 그렇지 않고 프로그래머가 만들어 사용하는 용어가 있는데, 전자는 예약어 (reserved word)라 하며 후자는 식별자(identifier) 라고 함
    - 예약어를 익히는 것이 그 언어의 문법을 익히는 것과 같게 됨

    6) 주석문(comment) 

    - 프로그램의 실행과는 관계없이 프로그램 코드 내에 기록할 문자
    - 주로 프로그램을 해설하는 내용이 첨가될 때 사용